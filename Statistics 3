{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMgCEECeckeISC6HRa+hJYL"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","Question 1: What is hypothesis testing in statistics?\n","Answer:\n","Hypothesis testing is a statistical method used to make decisions or inferences about a population based on sample data. It involves making an assumption (called a hypothesis) and then using probability and statistical tests to determine whether the observed data provides enough evidence to reject that assumption.\n","\n","\n","---\n","\n","Question 2: What is the null hypothesis, and how does it differ from the alternative hypothesis?\n","Answer:\n","\n","The null hypothesis (H₀) is the default assumption that there is no effect, no difference, or no relationship in the population. Example: \"The average height of men in a city is 170 cm.\"\n","\n","The alternative hypothesis (H₁ or Ha) states what we want to test for—it suggests that there is an effect, difference, or relationship. Example: \"The average height of men in the city is not 170 cm.\"\n","\n","\n","The key difference is:\n","\n","H₀ = status quo / no change\n","\n","H₁ = claim / research hypothesis\n","\n","\n","Question 4: What are Type I and Type II errors? Give examples of each.\n","Answer:\n","\n","A Type I error (False Positive) happens when we reject the null hypothesis even though it is actually true.\n","\n","Example: A medical test says a healthy person has a disease. (We rejected “no disease” when it was actually true.)\n","\n","\n","A Type II error (False Negative) happens when we fail to reject the null hypothesis even though it is false.\n","\n","Example: A medical test says a sick person is healthy. (We accepted “no disease” when it was actually false.)\n","\n","\n","\n","\n","---\n","\n","Question 5: What is the difference between a Z-test and a T-test? Explain when to use each.\n","Answer:\n","\n","Z-test:\n","\n","Used when the population variance (σ²) is known or the sample size is large (n ≥ 30).\n","\n","Based on the standard normal distribution (Z-distribution).\n","\n","Example: Checking if the average weight of a factory’s product differs from 100g, when population standard deviation is known.\n","\n","\n","T-test:\n","\n","Used when the population variance (σ²) is unknown and the sample size is small (n < 30).\n","\n","Based on the Student’s t-distribution (which has heavier tails to adjust for small samples).\n","\n","Example: Comparing the average marks of 20 students in a class with the expected average when population variance is unknown."],"metadata":{"id":"8U-tVyrphV6l"}},{"cell_type":"code","source":["\n","#Question 6: Write a Python program to generate a binomial distribution with n=10 and p=0.5, then plot its histogram.\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Parameters\n","n = 10   # number of trials\n","p = 0.5  # probability of success\n","size = 1000  # number of samples\n","\n","# Generate random binomial distribution\n","data = np.random.binomial(n, p, size)\n","\n","# Plot histogram\n","plt.hist(data, bins=range(n+2), edgecolor='black', alpha=0.7)\n","plt.title(\"Binomial Distribution (n=10, p=0.5)\")\n","plt.xlabel(\"Number of Successes\")\n","plt.ylabel(\"Frequency\")\n","plt.show()"],"metadata":{"id":"wzlPvKApxRCp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Question 7: Implement hypothesis testing using Z-statistics for a sample dataset in Python.\n","\n","import numpy as np\n","from scipy import stats\n","\n","# Sample data\n","sample_data = [49.1, 50.2, 51.0, 48.7, 50.5, 49.8, 50.3, 50.7, 50.2, 49.6,\n","               50.1, 49.9, 50.8, 50.4, 48.9, 50.6, 50.0, 49.7, 50.2, 49.5,\n","               50.1, 50.3, 50.4, 50.5, 50.0, 50.7, 49.3, 49.8, 50.2, 50.9,\n","               50.3, 50.4, 50.0, 49.7, 50.5, 49.9]\n","\n","# Convert to numpy array\n","data = np.array(sample_data)\n","n = len(data)\n","\n","# Hypothesized population mean\n","mu_0 = 50\n","\n","# Sample mean and standard deviation\n","sample_mean = np.mean(data)\n","sample_std = np.std(data, ddof=1)\n","\n","# Standard error\n","se = sample_std / np.sqrt(n)\n","\n","# Z-statistic\n","z_stat = (sample_mean - mu_0) / se\n","\n","# p-value (two-tailed test)\n","p_value = 2 * (1 - stats.norm.cdf(abs(z_stat)))\n","\n","print(\"Sample Mean:\", sample_mean)\n","print(\"Z-statistic:\", z_stat)\n","print(\"p-value:\", p_value)\n","\n","# Decision\n","alpha = 0.05\n","if p_value < alpha:\n","    print(\"Reject the null hypothesis: The sample mean is significantly different from 50.\")\n","else:\n","    print(\"Fail to reject the null hypothesis: No significant difference from 50.\")"],"metadata":{"id":"EMIxtIS6xmEC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Question 8: Write a Python script to simulate data from a normal distribution and calculate the 95% confidence interval for its mean. Plot the data using Matplotlib\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from scipy import stats\n","\n","# Simulate normal distribution data\n","np.random.seed(42)  # for reproducibility\n","data = np.random.normal(loc=50, scale=5, size=100)  # mean=50, std=5, n=100\n","\n","# Calculate sample mean and standard error\n","sample_mean = np.mean(data)\n","standard_error = stats.sem(data)  # standard error of the mean\n","\n","# Calculate 95% confidence interval\n","confidence_interval = stats.t.interval(0.95, df=len(data)-1, loc=sample_mean, scale=standard_error)\n","\n","print(\"Sample Mean:\", sample_mean)\n","print(\"95% Confidence Interval:\", confidence_interval)\n","\n","# Plot histogram of data\n","plt.hist(data, bins=15, edgecolor='black', alpha=0.7)\n","plt.axvline(sample_mean, color='red', linestyle='dashed', linewidth=2, label=f\"Mean = {sample_mean:.2f}\")\n","plt.axvline(confidence_interval[0], color='green', linestyle='dashed', linewidth=2, label=f\"95% CI Lower = {confidence_interval[0]:.2f}\")\n","plt.axvline(confidence_interval[1], color='blue', linestyle='dashed', linewidth=2, label=f\"95% CI Upper = {confidence_interval[1]:.2f}\")\n","plt.title(\"Normal Distribution Data with 95%"],"metadata":{"id":"hKzFJfZtyFO1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Question 9: Write a Python function to calculate the Z-scores from a dataset and\n","visualize the standardized data using a histogram. Explain what the Z-scores represent\n","in terms of standard deviations from the mean.\n","(Include your Python code and output in the code box below.)\n","\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Function to calculate Z-scores\n","def calculate_z_scores(data):\n","    mean = np.mean(data)\n","    std = np.std(data, ddof=1)  # sample standard deviation\n","    z_scores = (data - mean) / std\n","    return z_scores\n","\n","# Generate a dataset\n","np.random.seed(0)\n","data = np.random.normal(loc=100, scale=15, size=200)  # mean=100, std=15\n","\n","# Calculate Z-scores\n","z_scores = calculate_z_scores(data)\n","\n","# Print first 10 Z-scores\n","print(\"First 10 Z-scores:\", z_scores[:10])\n","\n","# Plot histogram of Z-scores\n","plt.hist(z_scores, bins=15, edgecolor='black', alpha=0.7)\n","plt.title(\"Histogram of Standardized Data (Z-scores)\")\n","plt.xlabel(\"Z-score\")\n","plt.ylabel(\"Frequency\")\n","plt.axvline(0, color='red', linestyle='dashed', linewidth=2, label=\"Mean = 0\")\n","plt.legend()\n","plt.show()"],"metadata":{"id":"5SdcgpVlzG49"},"execution_count":null,"outputs":[]}]}